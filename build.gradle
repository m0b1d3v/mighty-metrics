import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {

	id 'application' // CLI usage
	id 'jacoco' // Test coverage

	id 'com.github.ben-manes.versions' version '0.47.0' // Dependency update checks
	id 'io.freefair.lombok' version '8.3' // Boilerplate reduction
	id 'io.sentry.jvm.gradle' version '3.12.0' // Exception monitoring
	id 'io.spring.dependency-management' version '1.1.3' // Transitive/exclusion dependency management
	id 'org.owasp.dependencycheck' version '8.4.0' // Dependency vulnerability checks
	id 'org.sonarqube' version '4.3.1.3277' // Source code analysis
	id 'org.springframework.boot' version '3.1.4' // Framework

}

group = 'dev.m0b1'
version = 'development'

java {
	sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
	mavenCentral()
}

dependencies {

	// Resource file inspections for editors
	annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')

	// Disable template caching, automatic restart, live reload
	developmentOnly('org.springframework.boot:spring-boot-devtools')

	// Image recognition
	implementation('com.google.guava:guava:32.1.2-jre')
	implementation('com.google.cloud:google-cloud-vision:3.21.0') {
		exclude group: 'commons-logging', module: 'commons-logging'
	}

	// Framework
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter')

	// Testing
	testImplementation('org.springframework.boot:spring-boot-starter-test')

}

dependencyCheck {
	analyzers {
		assemblyEnabled = false
	}
}

tasks.named('test') {

	// Enable JUnit 5
	useJUnitPlatform()

	// Put out coverage reports for tests
	finalizedBy jacocoTestReport

	testLogging {
		events = [
			TestLogEvent.PASSED,
			TestLogEvent.SKIPPED,
			TestLogEvent.FAILED,
		]
	}

}

jacocoTestReport {

	// Don't run without tests first
	dependsOn test

	// Sonar needs the XML reports
	reports {
		xml.required = true
	}

}

sonarqube {
	properties {
		property('sonar.host.url', 'https://sonarcloud.io')
		property('sonar.organization', 'mobiusk')
		property('sonar.projectKey', 'mobiusk_mighty-metrics')
	}
}
